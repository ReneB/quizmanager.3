- model_class = ContentImage
.container
  .page-header
    %h1= t 'content_image.index.title'
  .col-md-9
    #content_images.row
      .form-group
        %label.control-label{:for => "search"} Search:
        = search_field '', '', class: 'search form-control', placeholder: "Type your search text here"
      %table.table.table-striped.table-hover
        %thead
          %tr
            %th.sort{"data-sort" => "id"}
              ID
              \#{sorting_icons(:order)}
            %th.sort{"data-sort" => "filename"}
              = model_class.human_attribute_name(:filename)
              = sorting_icons(:alphabet)
            %th.sort{"data-sort" => "times_used"}
              = t 'content_image.times_used'
              = sorting_icons(:order)
            %th= t '.actions', :default => t("helpers.actions")
        %tbody.list
          - @content_images.each do |content_image|
            %tr
              %td.id.col-md-1= content_image.id
              %td.filename.col-md-8= content_image.filename
              %td.times_used.col-md-1= content_image.times_used
              %td.col-md-2
                = link_to content_image_path(content_image), :class => 'btn btn-xs', :title => "#{ t('.show', :default => t('helpers.links.show')) }" do
                  = glyph 'info-sign'
                = link_to edit_content_image_path(content_image), :class => 'btn btn-xs', :title => "#{ t('.edit', :default => t('helpers.links.edit')) }" do
                  = glyph 'pencil'
                - if content_image.in_use?
                  = content_tag :span, class: 'inactive', title: t('content_image.remove.hover.inactive', count: content_image.times_used) do
                    = glyph 'remove'
                - else
                  = link_to content_image_path(content_image), :method => :delete, :data => { :confirm => t('.confirm', :default => t("helpers.links.confirm", :default => 'Are you sure?')) }, :class => 'btn btn-xs', :title => "#{ t('.destroy', :default => t('helpers.links.destroy')) }" do
                    = glyph 'remove'
    .row
      = link_to t('.new', :default => t("helpers.links.new")), |
        new_content_image_path,                                |
        :class => 'btn btn-primary'                            |
= javascript_tag do
  document.addEventListener("turbolinks:load", buildContentImageList);
  
  function buildContentImageList() {
  document.removeEventListener("turbolinks:load", buildContentImageList);
  
  var options = {
  valueNames: ['id', 'filename', 'times_used']
  };
  
  var contentImageList = new List('content_images', options);
  }
